{"version":3,"sources":["node_modules/@ionic/core/dist/esm/cubic-bezier-2812fda3.js","node_modules/@ionic/core/dist/esm/index-1e5940d5.js","node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * Based on:\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\n * TODO: Reduce rounding error\n */\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n/**\n * Given a cubic-bezier curve, get the x value (time) given\n * the y value (progression).\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\n * P0: (0, 0)\n * P1: (0.32, 0.72)\n * P2: (0, 1)\n * P3: (1, 1)\n *\n * If you give a cubic bezier curve that never reaches the\n * provided progression, this function will return NaN.\n */\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\n    const tValues = solveCubicBezier(p0.y, p1.y, p2.y, p3.y, progression);\n    return solveCubicParametricEquation(p0.x, p1.x, p2.x, p3.x, tValues[0]); // TODO: Add better strategy for dealing with multiple solutions\n};\n/**\n * Solve a cubic equation in one dimension (time)\n */\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\n    const partA = (3 * p1) * Math.pow(t - 1, 2);\n    const partB = (-3 * p2 * t) + (3 * p2) + (p3 * t);\n    const partC = p0 * Math.pow(t - 1, 3);\n    return t * (partA + (t * partB)) - partC;\n};\n/**\n * Find the `t` value for a cubic bezier using Cardano's formula\n */\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\n    p0 -= refPoint;\n    p1 -= refPoint;\n    p2 -= refPoint;\n    p3 -= refPoint;\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\n    return roots.filter(root => root >= 0 && root <= 1);\n};\nconst solveQuadraticEquation = (a, b, c) => {\n    const discriminant = b * b - 4 * a * c;\n    if (discriminant < 0) {\n        return [];\n    }\n    else {\n        return [\n            (-b + Math.sqrt(discriminant)) / (2 * a),\n            (-b - Math.sqrt(discriminant)) / (2 * a)\n        ];\n    }\n};\nconst solveCubicEquation = (a, b, c, d) => {\n    if (a === 0) {\n        return solveQuadraticEquation(b, c, d);\n    }\n    b /= a;\n    c /= a;\n    d /= a;\n    const p = (3 * c - b * b) / 3;\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\n    if (p === 0) {\n        return [Math.pow(-q, 1 / 3)];\n    }\n    else if (q === 0) {\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\n    }\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\n    if (discriminant === 0) {\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\n    }\n    else if (discriminant > 0) {\n        return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow((q / 2) + Math.sqrt(discriminant), 1 / 3) - b / 3];\n    }\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\n    const s = 2 * Math.pow(r, 1 / 3);\n    return [\n        s * Math.cos(phi / 3) - b / 3,\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3\n    ];\n};\n\nexport { Point as P, getTimeGivenProgression as g };\n","import { c as createAnimation } from './animation-af478fe9.js';\n\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\nconst baseAnimation = () => {\n    // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n    // \"Apply the sharp curve to items temporarily leaving the screen that may return\n    // from the same exit point. When they return, use the deceleration curve. On mobile,\n    // this transition typically occurs over 300ms\" -- MD Motion Guide\n    return createAnimation()\n        .easing('cubic-bezier(0.0, 0.0, 0.2, 1)') // Deceleration curve (Entering the screen)\n        .duration(300);\n};\n\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\nconst menuOverlayAnimation = (menu) => {\n    let closedX;\n    let openedX;\n    const BOX_SHADOW_WIDTH = 8;\n    const width = menu.width + BOX_SHADOW_WIDTH;\n    const menuAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    if (menu.isEndSide) {\n        // right side\n        closedX = width + 'px';\n        openedX = '0px';\n    }\n    else {\n        // left side\n        closedX = -width + 'px';\n        openedX = '0px';\n    }\n    menuAnimation\n        .addElement(menu.menuInnerEl)\n        .fromTo('transform', `translateX(${closedX})`, `translateX(${openedX})`);\n    backdropAnimation\n        .addElement(menu.backdropEl)\n        .fromTo('opacity', 0.01, 0.32);\n    return baseAnimation().addAnimation([menuAnimation, backdropAnimation]);\n};\n\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\nconst menuPushAnimation = (menu) => {\n    let contentOpenedX;\n    let menuClosedX;\n    const width = menu.width;\n    if (menu.isEndSide) {\n        contentOpenedX = -width + 'px';\n        menuClosedX = width + 'px';\n    }\n    else {\n        contentOpenedX = width + 'px';\n        menuClosedX = -width + 'px';\n    }\n    const menuAnimation = createAnimation()\n        .addElement(menu.menuInnerEl)\n        .fromTo('transform', `translateX(${menuClosedX})`, 'translateX(0px)');\n    const contentAnimation = createAnimation()\n        .addElement(menu.contentEl)\n        .fromTo('transform', 'translateX(0px)', `translateX(${contentOpenedX})`);\n    const backdropAnimation = createAnimation()\n        .addElement(menu.backdropEl)\n        .fromTo('opacity', 0.01, 0.32);\n    return baseAnimation().addAnimation([menuAnimation, backdropAnimation, contentAnimation]);\n};\n\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\nconst menuRevealAnimation = (menu) => {\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\n    const contentOpen = createAnimation()\n        .addElement(menu.contentEl) // REVIEW\n        .fromTo('transform', 'translateX(0px)', `translateX(${openedX})`);\n    return baseAnimation().addAnimation(contentOpen);\n};\n\nconst createMenuController = () => {\n    const menuAnimations = new Map();\n    const menus = [];\n    const open = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return menuEl.open();\n        }\n        return false;\n    };\n    const close = async (menu) => {\n        const menuEl = await (menu !== undefined ? get(menu) : getOpen());\n        if (menuEl !== undefined) {\n            return menuEl.close();\n        }\n        return false;\n    };\n    const toggle = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return menuEl.toggle();\n        }\n        return false;\n    };\n    const enable = async (shouldEnable, menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            menuEl.disabled = !shouldEnable;\n        }\n        return menuEl;\n    };\n    const swipeGesture = async (shouldEnable, menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            menuEl.swipeGesture = shouldEnable;\n        }\n        return menuEl;\n    };\n    const isOpen = async (menu) => {\n        if (menu != null) {\n            const menuEl = await get(menu);\n            return (menuEl !== undefined && menuEl.isOpen());\n        }\n        else {\n            const menuEl = await getOpen();\n            return menuEl !== undefined;\n        }\n    };\n    const isEnabled = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return !menuEl.disabled;\n        }\n        return false;\n    };\n    const get = async (menu) => {\n        await waitUntilReady();\n        if (menu === 'start' || menu === 'end') {\n            // there could be more than one menu on the same side\n            // so first try to get the enabled one\n            const menuRef = find(m => m.side === menu && !m.disabled);\n            if (menuRef) {\n                return menuRef;\n            }\n            // didn't find a menu side that is enabled\n            // so try to get the first menu side found\n            return find(m => m.side === menu);\n        }\n        else if (menu != null) {\n            // the menuId was not left or right\n            // so try to get the menu by its \"id\"\n            return find(m => m.menuId === menu);\n        }\n        // return the first enabled menu\n        const menuEl = find(m => !m.disabled);\n        if (menuEl) {\n            return menuEl;\n        }\n        // get the first menu in the array, if one exists\n        return menus.length > 0 ? menus[0].el : undefined;\n    };\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    const getOpen = async () => {\n        await waitUntilReady();\n        return _getOpenSync();\n    };\n    /**\n     * Get all menu instances.\n     */\n    const getMenus = async () => {\n        await waitUntilReady();\n        return getMenusSync();\n    };\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    const isAnimating = async () => {\n        await waitUntilReady();\n        return isAnimatingSync();\n    };\n    const registerAnimation = (name, animation) => {\n        menuAnimations.set(name, animation);\n    };\n    const _register = (menu) => {\n        if (menus.indexOf(menu) < 0) {\n            if (!menu.disabled) {\n                _setActiveMenu(menu);\n            }\n            menus.push(menu);\n        }\n    };\n    const _unregister = (menu) => {\n        const index = menus.indexOf(menu);\n        if (index > -1) {\n            menus.splice(index, 1);\n        }\n    };\n    const _setActiveMenu = (menu) => {\n        // if this menu should be enabled\n        // then find all the other menus on this same side\n        // and automatically disable other same side menus\n        const side = menu.side;\n        menus\n            .filter(m => m.side === side && m !== menu)\n            .forEach(m => m.disabled = true);\n    };\n    const _setOpen = async (menu, shouldOpen, animated) => {\n        if (isAnimatingSync()) {\n            return false;\n        }\n        if (shouldOpen) {\n            const openedMenu = await getOpen();\n            if (openedMenu && menu.el !== openedMenu) {\n                await openedMenu.setOpen(false, false);\n            }\n        }\n        return menu._setOpen(shouldOpen, animated);\n    };\n    const _createAnimation = (type, menuCmp) => {\n        const animationBuilder = menuAnimations.get(type);\n        if (!animationBuilder) {\n            throw new Error('animation not registered');\n        }\n        const animation = animationBuilder(menuCmp);\n        return animation;\n    };\n    const _getOpenSync = () => {\n        return find(m => m._isOpen);\n    };\n    const getMenusSync = () => {\n        return menus.map(menu => menu.el);\n    };\n    const isAnimatingSync = () => {\n        return menus.some(menu => menu.isAnimating);\n    };\n    const find = (predicate) => {\n        const instance = menus.find(predicate);\n        if (instance !== undefined) {\n            return instance.el;\n        }\n        return undefined;\n    };\n    const waitUntilReady = () => {\n        return Promise.all(Array.from(document.querySelectorAll('ion-menu'))\n            .map(menu => menu.componentOnReady()));\n    };\n    registerAnimation('reveal', menuRevealAnimation);\n    registerAnimation('push', menuPushAnimation);\n    registerAnimation('overlay', menuOverlayAnimation);\n    return {\n        registerAnimation,\n        get,\n        getMenus,\n        getOpen,\n        isEnabled,\n        swipeGesture,\n        isAnimating,\n        isOpen,\n        enable,\n        toggle,\n        close,\n        open,\n        _getOpenSync,\n        _createAnimation,\n        _register,\n        _unregister,\n        _setOpen,\n        _setActiveMenu,\n    };\n};\nconst menuController = /*@__PURE__*/ createMenuController();\n\nexport { menuController as m };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":"webpack:///","file":"3-es5.js"}