{"version":3,"sources":["node_modules/@ionic/core/dist/esm/animation-af478fe9.js"],"names":[],"mappings":"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","sourcesContent":["import { r as raf } from './helpers-46f4a262.js';\n\nconst setStyleProperty = (element, propertyName, value) => {\n    element.style.setProperty(propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n    element.style.removeProperty(propertyName);\n};\nconst animationEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n        el.addEventListener('animationend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n            el.removeEventListener('animationend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nconst generateKeyframeRules = (keyframes = []) => {\n    return keyframes.map(keyframe => {\n        const offset = keyframe.offset;\n        const frameString = [];\n        for (const property in keyframe) {\n            if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n                frameString.push(`${property}: ${keyframe[property]};`);\n            }\n        }\n        return `${offset * 100}% { ${frameString.join(' ')} }`;\n    }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n    let index = keyframeIds.indexOf(keyframeRules);\n    if (index < 0) {\n        index = (keyframeIds.push(keyframeRules) - 1);\n    }\n    return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n    const rootNode = element.getRootNode();\n    return (rootNode.head || rootNode);\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n    const styleContainer = getStyleContainer(element);\n    const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n    if (existingStylesheet) {\n        return existingStylesheet;\n    }\n    const stylesheet = (element.ownerDocument || document).createElement('style');\n    stylesheet.id = keyframeName;\n    stylesheet.textContent = `@keyframes ${keyframeName} { ${keyframeRules} } @keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n    styleContainer.appendChild(stylesheet);\n    return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n    if (className !== undefined) {\n        const classNameToAppend = (Array.isArray(className)) ? className : [className];\n        return [...classes, ...classNameToAppend];\n    }\n    return classes;\n};\n\n// TODO: Add more tests. until then, be sure to manually test menu and swipe to go back/routing transitions\nconst createAnimation = () => {\n    let _delay;\n    let _duration;\n    let _easing;\n    let _iterations;\n    let _fill;\n    let _direction;\n    let _keyframes = [];\n    let beforeAddClasses = [];\n    let beforeRemoveClasses = [];\n    let initialized = false;\n    let parentAnimation;\n    let beforeStylesValue = {};\n    let afterAddClasses = [];\n    let afterRemoveClasses = [];\n    let afterStylesValue = {};\n    let numAnimationsRunning = 0;\n    let shouldForceLinearEasing = false;\n    let shouldForceSyncPlayback = false;\n    let cssAnimationsTimerFallback;\n    let forceDirectionValue;\n    let forceDurationValue;\n    let forceDelayValue;\n    let willComplete = true;\n    let finished = false;\n    let shouldCalculateNumAnimations = true;\n    let keyframeName;\n    let ani;\n    const onFinishCallbacks = [];\n    const onFinishOneTimeCallbacks = [];\n    const elements = [];\n    const childAnimations = [];\n    const stylesheets = [];\n    const _beforeAddReadFunctions = [];\n    const _beforeAddWriteFunctions = [];\n    const _afterAddReadFunctions = [];\n    const _afterAddWriteFunctions = [];\n    const webAnimations = [];\n    const supportsAnimationEffect = (typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function');\n    const supportsWebAnimations = (typeof Element === 'function') && (typeof Element.prototype.animate === 'function') && supportsAnimationEffect;\n    const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n    const getWebAnimations = () => {\n        return webAnimations;\n    };\n    const destroy = () => {\n        childAnimations.forEach(childAnimation => {\n            childAnimation.destroy();\n        });\n        cleanUp();\n        elements.length = 0;\n        childAnimations.length = 0;\n        _keyframes.length = 0;\n        clearOnFinish();\n        initialized = false;\n        shouldCalculateNumAnimations = true;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations, removes\n     * any animation properties from the\n     * animation's elements, and removes the\n     * animation's stylesheets from the DOM.\n     */\n    const cleanUp = () => {\n        cleanUpElements();\n        cleanUpStyleSheets();\n    };\n    const onFinish = (callback, opts) => {\n        const callbacks = (opts && opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n        callbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const clearOnFinish = () => {\n        onFinishCallbacks.length = 0;\n        onFinishOneTimeCallbacks.length = 0;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations and removes\n     * any animation properties from the\n     * the animation's elements.\n     */\n    const cleanUpElements = () => {\n        if (supportsWebAnimations) {\n            webAnimations.forEach(animation => {\n                animation.cancel();\n            });\n            webAnimations.length = 0;\n        }\n        else {\n            const elementsArray = elements.slice();\n            raf(() => {\n                elementsArray.forEach(element => {\n                    removeStyleProperty(element, 'animation-name');\n                    removeStyleProperty(element, 'animation-duration');\n                    removeStyleProperty(element, 'animation-timing-function');\n                    removeStyleProperty(element, 'animation-iteration-count');\n                    removeStyleProperty(element, 'animation-delay');\n                    removeStyleProperty(element, 'animation-play-state');\n                    removeStyleProperty(element, 'animation-fill-mode');\n                    removeStyleProperty(element, 'animation-direction');\n                });\n            });\n        }\n    };\n    /**\n     * Removes the animation's stylesheets\n     * from the DOM.\n     */\n    const cleanUpStyleSheets = () => {\n        stylesheets.forEach(stylesheet => {\n            /**\n             * When sharing stylesheets, it's possible\n             * for another animation to have already\n             * cleaned up a particular stylesheet\n             */\n            if (stylesheet && stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        });\n        stylesheets.length = 0;\n    };\n    const beforeAddRead = (readFn) => {\n        _beforeAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const beforeAddWrite = (writeFn) => {\n        _beforeAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const afterAddRead = (readFn) => {\n        _afterAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const afterAddWrite = (writeFn) => {\n        _afterAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const beforeAddClass = (className) => {\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\n        return ani;\n    };\n    const beforeRemoveClass = (className) => {\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n        return ani;\n    };\n    /**\n     * Set CSS inline styles to the animation's\n     * elements before the animation begins.\n     */\n    const beforeStyles = (styles = {}) => {\n        beforeStylesValue = styles;\n        return ani;\n    };\n    /**\n     * Clear CSS inline styles from the animation's\n     * elements before the animation begins.\n     */\n    const beforeClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            beforeStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const afterAddClass = (className) => {\n        afterAddClasses = addClassToArray(afterAddClasses, className);\n        return ani;\n    };\n    const afterRemoveClass = (className) => {\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n        return ani;\n    };\n    const afterStyles = (styles = {}) => {\n        afterStylesValue = styles;\n        return ani;\n    };\n    const afterClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            afterStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const getFill = () => {\n        if (_fill !== undefined) {\n            return _fill;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getFill();\n        }\n        return 'both';\n    };\n    const getDirection = () => {\n        if (forceDirectionValue !== undefined) {\n            return forceDirectionValue;\n        }\n        if (_direction !== undefined) {\n            return _direction;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDirection();\n        }\n        return 'normal';\n    };\n    const getEasing = () => {\n        if (shouldForceLinearEasing) {\n            return 'linear';\n        }\n        if (_easing !== undefined) {\n            return _easing;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getEasing();\n        }\n        return 'linear';\n    };\n    const getDuration = () => {\n        if (shouldForceSyncPlayback) {\n            return 0;\n        }\n        if (forceDurationValue !== undefined) {\n            return forceDurationValue;\n        }\n        if (_duration !== undefined) {\n            return _duration;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDuration();\n        }\n        return 0;\n    };\n    const getIterations = () => {\n        if (_iterations !== undefined) {\n            return _iterations;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getIterations();\n        }\n        return 1;\n    };\n    const getDelay = () => {\n        if (forceDelayValue !== undefined) {\n            return forceDelayValue;\n        }\n        if (_delay !== undefined) {\n            return _delay;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDelay();\n        }\n        return 0;\n    };\n    const getKeyframes = () => {\n        return _keyframes;\n    };\n    const direction = (animationDirection) => {\n        _direction = animationDirection;\n        update(true);\n        return ani;\n    };\n    const fill = (animationFill) => {\n        _fill = animationFill;\n        update(true);\n        return ani;\n    };\n    const delay = (animationDelay) => {\n        _delay = animationDelay;\n        update(true);\n        return ani;\n    };\n    const easing = (animationEasing) => {\n        _easing = animationEasing;\n        update(true);\n        return ani;\n    };\n    const duration = (animationDuration) => {\n        /**\n         * CSS Animation Durations of 0ms work fine on Chrome\n         * but do not run on Safari, so force it to 1ms to\n         * get it to run on both platforms.\n         */\n        if (!supportsWebAnimations && animationDuration === 0) {\n            animationDuration = 1;\n        }\n        _duration = animationDuration;\n        update(true);\n        return ani;\n    };\n    const iterations = (animationIterations) => {\n        _iterations = animationIterations;\n        update(true);\n        return ani;\n    };\n    const parent = (animation) => {\n        parentAnimation = animation;\n        return ani;\n    };\n    const addElement = (el) => {\n        if (el != null) {\n            if (el.nodeType === 1) {\n                elements.push(el);\n            }\n            else if (el.length >= 0) {\n                for (let i = 0; i < el.length; i++) {\n                    elements.push(el[i]);\n                }\n            }\n            else {\n                console.error('Invalid addElement value');\n            }\n        }\n        return ani;\n    };\n    const addAnimation = (animationToAdd) => {\n        if (animationToAdd != null) {\n            if (Array.isArray(animationToAdd)) {\n                for (const animation of animationToAdd) {\n                    animation.parent(ani);\n                    childAnimations.push(animation);\n                }\n            }\n            else {\n                animationToAdd.parent(ani);\n                childAnimations.push(animationToAdd);\n            }\n        }\n        return ani;\n    };\n    const keyframes = (keyframeValues) => {\n        _keyframes = keyframeValues;\n        return ani;\n    };\n    /**\n     * Runs all before read callbacks\n     */\n    const runBeforeRead = () => {\n        _beforeAddReadFunctions.forEach(callback => {\n            callback();\n        });\n    };\n    /**\n     * Runs all before write callbacks\n     */\n    const runBeforeWrite = () => {\n        _beforeAddWriteFunctions.forEach(callback => {\n            callback();\n        });\n    };\n    /**\n     * Updates styles and classes before animation runs\n     */\n    const runBeforeStyles = () => {\n        const addClasses = beforeAddClasses;\n        const removeClasses = beforeRemoveClasses;\n        const styles = beforeStylesValue;\n        elements.forEach(el => {\n            const elementClassList = el.classList;\n            addClasses.forEach(c => elementClassList.add(c));\n            removeClasses.forEach(c => elementClassList.remove(c));\n            for (const property in styles) {\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"before\" animation hooks.\n     */\n    const beforeAnimation = () => {\n        runBeforeRead();\n        runBeforeWrite();\n        runBeforeStyles();\n    };\n    /**\n     * Runs all after read callbacks\n     */\n    const runAfterRead = () => {\n        _afterAddReadFunctions.forEach(callback => {\n            callback();\n        });\n    };\n    /**\n     * Runs all after write callbacks\n     */\n    const runAfterWrite = () => {\n        _afterAddWriteFunctions.forEach(callback => {\n            callback();\n        });\n    };\n    /**\n     * Updates styles and classes before animation ends\n     */\n    const runAfterStyles = () => {\n        const addClasses = afterAddClasses;\n        const removeClasses = afterRemoveClasses;\n        const styles = afterStylesValue;\n        elements.forEach(el => {\n            const elementClassList = el.classList;\n            addClasses.forEach(c => elementClassList.add(c));\n            removeClasses.forEach(c => elementClassList.remove(c));\n            for (const property in styles) {\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"after\" animation hooks.\n     */\n    const afterAnimation = () => {\n        clearCSSAnimationsTimeout();\n        runAfterRead();\n        runAfterWrite();\n        runAfterStyles();\n        const currentStep = willComplete ? 1 : 0;\n        onFinishCallbacks.forEach(onFinishCallback => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.length = 0;\n        shouldCalculateNumAnimations = true;\n        finished = true;\n    };\n    const animationFinish = () => {\n        if (numAnimationsRunning === 0) {\n            return;\n        }\n        numAnimationsRunning--;\n        if (numAnimationsRunning === 0) {\n            afterAnimation();\n            if (parentAnimation) {\n                parentAnimation.animationFinish();\n            }\n        }\n    };\n    const initializeCSSAnimation = (toggleAnimationName = true) => {\n        cleanUpStyleSheets();\n        elements.forEach(element => {\n            if (_keyframes.length > 0) {\n                const keyframeRules = generateKeyframeRules(_keyframes);\n                keyframeName = generateKeyframeName(keyframeRules);\n                const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n                stylesheets.push(stylesheet);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill());\n                setStyleProperty(element, 'animation-direction', getDirection());\n                const iterationsCount = (getIterations() === Infinity)\n                    ? 'infinite'\n                    : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                setStyleProperty(element, 'animation-play-state', 'paused');\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', stylesheet.id || null);\n                });\n            }\n        });\n    };\n    const initializeWebAnimation = () => {\n        elements.forEach(element => {\n            const animation = element.animate(_keyframes, {\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection()\n            });\n            animation.pause();\n            webAnimations.push(animation);\n        });\n        if (webAnimations.length > 0) {\n            webAnimations[0].onfinish = () => {\n                animationFinish();\n            };\n        }\n    };\n    const initializeAnimation = (toggleAnimationName = true) => {\n        beforeAnimation();\n        if (_keyframes.length > 0) {\n            if (supportsWebAnimations) {\n                initializeWebAnimation();\n            }\n            else {\n                initializeCSSAnimation(toggleAnimationName);\n            }\n        }\n        initialized = true;\n    };\n    const setAnimationStep = (step) => {\n        step = Math.min(Math.max(step, 0), 0.999);\n        if (supportsWebAnimations) {\n            webAnimations.forEach(animation => {\n                animation.currentTime = animation.effect.getComputedTiming().delay + (getDuration() * step);\n                animation.pause();\n            });\n        }\n        else {\n            const animationDelay = getDelay() || 0;\n            const animationDuration = `-${animationDelay + (getDuration() * step)}ms`;\n            elements.forEach(element => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-delay', animationDuration);\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                }\n            });\n        }\n    };\n    const updateWebAnimation = () => {\n        webAnimations.forEach(animation => {\n            animation.effect.updateTiming({\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection()\n            });\n        });\n    };\n    const updateCSSAnimation = (toggleAnimationName = true) => {\n        elements.forEach(element => {\n            raf(() => {\n                setStyleProperty(element, 'animation-name', keyframeName || null);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n                setStyleProperty(element, 'animation-direction', getDirection() || null);\n                const iterationsCount = (getIterations() === Infinity)\n                    ? 'infinite'\n                    : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', keyframeName || null);\n                });\n            });\n        });\n    };\n    const update = (deep = false, toggleAnimationName = true) => {\n        if (deep) {\n            childAnimations.forEach(animation => {\n                animation.update(deep);\n            });\n        }\n        if (supportsWebAnimations) {\n            updateWebAnimation();\n        }\n        else {\n            updateCSSAnimation(toggleAnimationName);\n        }\n        return ani;\n    };\n    const progressStart = (forceLinearEasing = false) => {\n        childAnimations.forEach(animation => {\n            animation.progressStart(forceLinearEasing);\n        });\n        pauseAnimation();\n        shouldForceLinearEasing = forceLinearEasing;\n        if (!initialized) {\n            initializeAnimation();\n        }\n        else {\n            update();\n            setAnimationStep(0);\n        }\n        return ani;\n    };\n    const progressStep = (step) => {\n        childAnimations.forEach(animation => {\n            animation.progressStep(step);\n        });\n        setAnimationStep(step);\n        return ani;\n    };\n    const progressEnd = (playTo, step, dur) => {\n        shouldForceLinearEasing = false;\n        childAnimations.forEach(animation => {\n            animation.progressEnd(playTo, step, dur);\n        });\n        if (dur !== undefined) {\n            forceDurationValue = dur;\n        }\n        finished = false;\n        willComplete = playTo === 1;\n        if (!willComplete) {\n            forceDirectionValue = (getDirection() === 'reverse') ? 'normal' : 'reverse';\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(1 - step);\n            }\n            else {\n                forceDelayValue = ((1 - step) * getDuration()) * -1;\n                update(false, false);\n            }\n        }\n        else {\n            if (!supportsWebAnimations) {\n                forceDelayValue = (step * getDuration()) * -1;\n                update(false, false);\n            }\n        }\n        onFinish(() => {\n            willComplete = true;\n            forceDurationValue = undefined;\n            forceDirectionValue = undefined;\n            forceDelayValue = undefined;\n        }, {\n            oneTimeCallback: true\n        });\n        if (!parentAnimation) {\n            play();\n        }\n        return ani;\n    };\n    const pauseAnimation = () => {\n        if (initialized) {\n            if (supportsWebAnimations) {\n                webAnimations.forEach(animation => {\n                    animation.pause();\n                });\n            }\n            else {\n                elements.forEach(element => {\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                });\n            }\n        }\n    };\n    const pause = () => {\n        childAnimations.forEach(animation => {\n            animation.pause();\n        });\n        pauseAnimation();\n        return ani;\n    };\n    const playAsync = () => {\n        return play();\n    };\n    const playSync = () => {\n        play({ sync: true });\n        return ani;\n    };\n    const onAnimationEndFallback = () => {\n        cssAnimationsTimerFallback = undefined;\n        animationFinish();\n    };\n    const clearCSSAnimationsTimeout = () => {\n        if (cssAnimationsTimerFallback) {\n            clearTimeout(cssAnimationsTimerFallback);\n        }\n    };\n    const playCSSAnimations = () => {\n        clearCSSAnimationsTimeout();\n        elements.forEach(element => {\n            if (_keyframes.length > 0) {\n                raf(() => {\n                    setStyleProperty(element, 'animation-play-state', 'running');\n                });\n            }\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n        else {\n            /**\n             * This is a catchall in the event that a CSS Animation did not finish.\n             * The Web Animations API has mechanisms in place for preventing this.\n             * CSS Animations will not fire an `animationend` event\n             * for elements with `display: none`. The Web Animations API\n             * accounts for this, but using raw CSS Animations requires\n             * this workaround.\n             */\n            const animationDelay = getDelay() || 0;\n            const animationDuration = getDuration() || 0;\n            const animationIterations = getIterations() || 1;\n            cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + (animationDuration * animationIterations) + ANIMATION_END_FALLBACK_PADDING_MS);\n            animationEnd(elements[0], () => {\n                clearCSSAnimationsTimeout();\n                /**\n                 * Ensure that clean up\n                 * is always done a frame\n                 * before the onFinish handlers\n                 * are fired. Otherwise, there\n                 * may be flickering if a new\n                 * animation is started on the same\n                 * element too quickly\n                 *\n                 * TODO: Is there a cleaner way to do this?\n                 */\n                raf(() => {\n                    clearCSSAnimationPlayState();\n                    raf(animationFinish);\n                });\n            });\n        }\n    };\n    const clearCSSAnimationPlayState = () => {\n        elements.forEach(element => {\n            removeStyleProperty(element, 'animation-duration');\n            removeStyleProperty(element, 'animation-delay');\n            removeStyleProperty(element, 'animation-play-state');\n        });\n    };\n    const playWebAnimations = () => {\n        webAnimations.forEach(animation => {\n            animation.play();\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n    };\n    const resetAnimation = () => {\n        if (supportsWebAnimations) {\n            setAnimationStep(0);\n        }\n        else {\n            updateCSSAnimation();\n        }\n    };\n    const play = (opts) => {\n        return new Promise(resolve => {\n            if (opts && opts.sync) {\n                shouldForceSyncPlayback = true;\n                onFinish(() => shouldForceSyncPlayback = false, { oneTimeCallback: true });\n            }\n            if (!initialized) {\n                initializeAnimation();\n            }\n            if (finished) {\n                resetAnimation();\n                finished = false;\n            }\n            if (shouldCalculateNumAnimations) {\n                numAnimationsRunning = childAnimations.length + 1;\n                shouldCalculateNumAnimations = false;\n            }\n            onFinish(() => resolve(), { oneTimeCallback: true });\n            childAnimations.forEach(animation => {\n                animation.play();\n            });\n            if (supportsWebAnimations) {\n                playWebAnimations();\n            }\n            else {\n                playCSSAnimations();\n            }\n        });\n    };\n    const stop = () => {\n        childAnimations.forEach(animation => {\n            animation.stop();\n        });\n        if (initialized) {\n            cleanUpElements();\n            initialized = false;\n        }\n    };\n    const from = (property, value) => {\n        const firstFrame = _keyframes[0];\n        if (firstFrame !== undefined && firstFrame.offset === 0) {\n            firstFrame[property] = value;\n        }\n        else {\n            _keyframes = [\n                { offset: 0, [property]: value },\n                ..._keyframes\n            ];\n        }\n        return ani;\n    };\n    const to = (property, value) => {\n        const lastFrame = _keyframes[_keyframes.length - 1];\n        if (lastFrame !== undefined && lastFrame.offset === 1) {\n            lastFrame[property] = value;\n        }\n        else {\n            _keyframes = [\n                ..._keyframes,\n                { offset: 1, [property]: value }\n            ];\n        }\n        return ani;\n    };\n    const fromTo = (property, fromValue, toValue) => {\n        return from(property, fromValue).to(property, toValue);\n    };\n    return ani = {\n        parentAnimation,\n        elements,\n        childAnimations,\n        animationFinish,\n        from,\n        to,\n        fromTo,\n        parent,\n        play,\n        playAsync,\n        playSync,\n        pause,\n        stop,\n        destroy,\n        keyframes,\n        addAnimation,\n        addElement,\n        update,\n        fill,\n        direction,\n        iterations,\n        duration,\n        easing,\n        delay,\n        getWebAnimations,\n        getKeyframes,\n        getFill,\n        getDirection,\n        getDelay,\n        getIterations,\n        getEasing,\n        getDuration,\n        afterAddRead,\n        afterAddWrite,\n        afterClearStyles,\n        afterStyles,\n        afterRemoveClass,\n        afterAddClass,\n        beforeAddRead,\n        beforeAddWrite,\n        beforeClearStyles,\n        beforeStyles,\n        beforeRemoveClass,\n        beforeAddClass,\n        onFinish,\n        progressStart,\n        progressStep,\n        progressEnd\n    };\n};\n\nexport { createAnimation as c };\n"],"sourceRoot":"webpack:///","file":"0-es5.js"}