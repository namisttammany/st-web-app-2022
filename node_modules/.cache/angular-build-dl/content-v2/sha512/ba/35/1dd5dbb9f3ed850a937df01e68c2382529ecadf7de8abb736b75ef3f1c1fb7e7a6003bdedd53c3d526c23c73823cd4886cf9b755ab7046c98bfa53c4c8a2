{"version":3,"sources":["node_modules/@ionic/core/dist/esm/index-624eea58.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,oBAAA,EAAA,YAAA;AAAA,aAAA,kBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;;QAAA,iB;;;AACA,mCAAA;AAAA;;AACA,aAAA,SAAA,GAAA,CAAA;AACA,aAAA,cAAA,GAAA,IAAA,GAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA,GAAA,EAAA;AACA,aAAA,cAAA,GAAA,IAAA,GAAA,EAAA;AACA;AACA;;;;;;;sCAGA,M,EAAA;AACA,iBAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,KAAA,EAAA,EAAA,MAAA,CAAA,IAAA,EAAA,MAAA,CAAA,QAAA,IAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AACA;AACA;;;;;;wCAG2B;AAAA,cAA3B,IAA2B,uEAA3B,EAA2B;AAC3B,iBAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,KAAA,EAAA,EAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA;AACA;;;8BACA,W,EAAA,E,EAAA,Q,EAAA;AACA,cAAA,CAAA,KAAA,QAAA,CAAA,WAAA,CAAA,EAAA;AACA,iBAAA,cAAA,CAAA,MAAA,CAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,eAAA,cAAA,CAAA,GAAA,CAAA,EAAA,EAAA,QAAA;AACA,iBAAA,IAAA;AACA;;;gCACA,W,EAAA,E,EAAA,Q,EAAA;AACA,cAAA,CAAA,KAAA,KAAA,CAAA,WAAA,EAAA,EAAA,EAAA,QAAA,CAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,cAAA,GAAA,KAAA,cAAA;AACA,cAAA,WAAA,GAAA,CAAA,KAAA;AACA,UAAA,cAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA,CAAA;AACS,WAFT;;AAGA,cAAA,WAAA,KAAA,QAAA,EAAA;AACA,iBAAA,UAAA,GAAA,EAAA;AACA,YAAA,cAAA,CAAA,KAAA;AACA,gBAAA,KAAA,GAAA,IAAA,WAAA,CAAA,oBAAA,EAAA;AAAiE,cAAA,MAAA,EAAA;AAAU,gBAAA,WAAA,EAAA;AAAV;AAAjE,aAAA,CAAA;AACA,YAAA,QAAA,CAAA,aAAA,CAAA,KAAA;AACA,mBAAA,IAAA;AACA;;AACA,UAAA,cAAA,CAAA,MAAA,CAAA,EAAA;AACA,iBAAA,KAAA;AACA;;;gCACA,E,EAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,EAAA;;AACA,cAAA,KAAA,UAAA,KAAA,EAAA,EAAA;AACA,iBAAA,UAAA,GAAA,SAAA;AACA;AACA;;;uCACA,W,EAAA,E,EAAA;AACA,cAAA,GAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,CAAA,WAAA,CAAA;;AACA,cAAA,GAAA,KAAA,SAAA,EAAA;AACA,YAAA,GAAA,GAAA,IAAA,GAAA,EAAA;AACA,iBAAA,gBAAA,CAAA,GAAA,CAAA,WAAA,EAAA,GAAA;AACA;;AACA,UAAA,GAAA,CAAA,GAAA,CAAA,EAAA;AACA;;;sCACA,W,EAAA,E,EAAA;AACA,cAAA,GAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,CAAA,WAAA,CAAA;;AACA,cAAA,GAAA,KAAA,SAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,CAAA,EAAA;AACA;AACA;;;sCACA,E,EAAA;AACA,eAAA,cAAA,CAAA,GAAA,CAAA,EAAA;;AACA,cAAA,KAAA,cAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,kBAAA;AACA;AACA;;;qCACA,E,EAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,EAAA;;AACA,cAAA,KAAA,cAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,kBAAA;AACA;AACA;;;iCACA,W,EAAA;AACA,cAAA,KAAA,UAAA,KAAA,SAAA,EAAA;AACA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,KAAA,UAAA,CAAA,WAAA,CAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,iBAAA,IAAA;AACA;;;qCACA;AACA,iBAAA,KAAA,UAAA,KAAA,SAAA;AACA;;;2CACA;AACA,iBAAA,KAAA,cAAA,CAAA,IAAA,GAAA,CAAA;AACA;;;mCACA,W,EAAA;AACA,cAAA,QAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,CAAA,WAAA,CAAA;;AACA,cAAA,QAAA,IAAA,QAAA,CAAA,IAAA,GAAA,CAAA,EAAA;AACA,mBAAA,IAAA;AACA;;AACA,iBAAA,KAAA;AACA;;;gCACA;AACA,eAAA,SAAA;AACA,iBAAA,KAAA,SAAA;AACA;;;;;;QAEA,e;;;AACA,+BAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,aAAA,EAAA;AAAA;;AACA,aAAA,EAAA,GAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,QAAA,GAAA,QAAA,GAAA,OAAA,GAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA;;;;mCACA;AACA,cAAA,CAAA,KAAA,IAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,iBAAA,KAAA,IAAA,CAAA,QAAA,CAAA,KAAA,IAAA,CAAA;AACA;;;gCACA;AACA,cAAA,CAAA,KAAA,IAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,iBAAA,KAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,QAAA,CAAA;AACA;;;kCACA;AACA,cAAA,CAAA,KAAA,IAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,QAAA,GAAA,KAAA,IAAA,CAAA,OAAA,CAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,QAAA,CAAA;;AACA,cAAA,QAAA,IAAA,KAAA,aAAA,EAAA;AACA,iBAAA,IAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA;;AACA,iBAAA,QAAA;AACA;;;kCACA;AACA,cAAA,KAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA;;AACA,gBAAA,KAAA,aAAA,EAAA;AACA,mBAAA,IAAA,CAAA,YAAA,CAAA,KAAA,EAAA;AACA;AACA;AACA;;;kCACA;AACA,eAAA,OAAA;AACA,eAAA,IAAA,GAAA,SAAA;AACA;;;;;;QAEA,e;;;AACA,+BAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA;AAAA;;AACA,aAAA,EAAA,GAAA,EAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA;;;;gCACA;AACA,cAAA,CAAA,KAAA,IAAA,EAAA;AACA;AACA;;AACA,cAAA,KAAA,OAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,mCAAA,KAAA,OAAA,8HAAA;AAAA,oBAAA,OAAA;AACA,qBAAA,IAAA,CAAA,cAAA,CAAA,OAAA,EAAA,KAAA,EAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AACA,cAAA,KAAA,aAAA,EAAA;AACA,iBAAA,IAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA;AACA;;;kCACA;AACA,cAAA,CAAA,KAAA,IAAA,EAAA;AACA;AACA;;AACA,cAAA,KAAA,OAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,oCAAA,KAAA,OAAA,mIAAA;AAAA,oBAAA,OAAA;AACA,qBAAA,IAAA,CAAA,aAAA,CAAA,OAAA,EAAA,KAAA,EAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AACA,cAAA,KAAA,aAAA,EAAA;AACA,iBAAA,IAAA,CAAA,YAAA,CAAA,KAAA,EAAA;AACA;AACA;;;kCACA;AACA,eAAA,OAAA;AACA,eAAA,IAAA,GAAA,SAAA;AACA;;;;;;AAEA,QAAA,kBAAA,GAAA,oBAAA;AACA,QAAA,kBAAA,GAAA,IAAA,iBAAA,EAAA;;AAEA,QAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,EAAA,EAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA;AACA;AACA;AACA,UAAA,YAAA,GAAA,eAAA,CAAA,EAAA,CAAA,GAAA;AACA,mBAAA,CAAA,CAAA,IAAA,CAAA,OADA;AAEA,mBAAA,CAAA,CAAA,IAAA,CAAA;AAFA,OAAA,GAGK,CAAA,CAAA,IAAA,CAAA,OAHL;AAIA,UAAA,GAAA;AACA,UAAA,MAAA;;AACA,UAAA,EAAA,CAAA,iCAAA,CAAA,EAAA;AACA,QAAA,GAAA,GAAA,iCAAA;AACA,QAAA,MAAA,GAAA,oCAAA;AACA,OAHA,MAIA;AACA,QAAA,GAAA,GAAA,kBAAA;AACA,QAAA,MAAA,GAAA,qBAAA;AACA;;AACA,MAAA,EAAA,CAAA,GAAA,CAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA;AACA,aAAA,YAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA;AACA,OAFA;AAGA,KArBA;;AAsBA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,IAAA,EAAA;AACA,UAAA,SAAA,KAAA,SAAA,EAAA;AACA,YAAA;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,cAAA,CAAA,EAAA,EAAiD,SAAjD,EAAiD;AACjD,YAAA,GAAA,EAAA,eAAA;AACA,cAAA,SAAA,GAAA,IAAA;AACA;AAHiD,WAAjD,CAAA;AAKA,UAAA,IAAA,CAAA,gBAAA,CAAA,UAAA,EAAA,YAAA;AAAqD;AAAU,WAA/D,EAA+D,IAA/D;AACA,SAPA,CAQA,OAAA,CAAA,EAAA;AACA,UAAA,SAAA,GAAA,KAAA;AACA;AACA;;AACA,aAAA,CAAA,CAAA,SAAA;AACA,KAfA;;AAgBA,QAAA,SAAA;;AAEA,QAAA,UAAA,GAAA,IAAA;;AACA,QAAA,mBAAA,GAAA,SAAA,mBAAA,CAAA,EAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA;AACA,UAAA,YAAA;AACA,UAAA,WAAA;AACA,UAAA,UAAA;AACA,UAAA,aAAA;AACA,UAAA,YAAA;AACA,UAAA,WAAA;AACA,UAAA,SAAA;AACA,UAAA,cAAA,GAAA,CAAA;;AACA,UAAA,gBAAA,GAAA,SAAA,gBAAA,CAAA,EAAA,EAAA;AACA,QAAA,cAAA,GAAA,IAAA,CAAA,GAAA,KAAA,UAAA;;AACA,YAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA;AACA;AACA;;AACA,YAAA,CAAA,WAAA,IAAA,WAAA,EAAA;AACA,UAAA,WAAA,GAAA,gBAAA,CAAA,EAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,CAAA;AACA;;AACA,YAAA,CAAA,UAAA,EAAA;AACA,UAAA,UAAA,GAAA,gBAAA,CAAA,EAAA,EAAA,UAAA,EAAA,cAAA,EAAA,OAAA,CAAA;AACA;;AACA,YAAA,CAAA,aAAA,EAAA;AACA,UAAA,aAAA,GAAA,gBAAA,CAAA,EAAA,EAAA,aAAA,EAAA,cAAA,EAAA,OAAA,CAAA;AACA;AACA,OAdA;;AAeA,UAAA,eAAA,GAAA,SAAA,eAAA,CAAA,EAAA,EAAA;AACA,YAAA,cAAA,GAAA,IAAA,CAAA,GAAA,EAAA,EAAA;AACA;AACA;;AACA,YAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA;AACA;AACA;;AACA,YAAA,CAAA,WAAA,IAAA,WAAA,EAAA;AACA,UAAA,WAAA,GAAA,gBAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,CAAA;AACA;;AACA,YAAA,CAAA,SAAA,EAAA;AACA,UAAA,SAAA,GAAA,gBAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,SAAA,EAAA,aAAA,EAAA,OAAA,CAAA;AACA;AACA,OAbA;;AAcA,UAAA,cAAA,GAAA,SAAA,cAAA,CAAA,EAAA,EAAA;AACA,QAAA,SAAA;;AACA,YAAA,SAAA,EAAA;AACA,UAAA,SAAA,CAAA,EAAA,CAAA;AACA;AACA,OALA;;AAMA,UAAA,aAAA,GAAA,SAAA,aAAA,CAAA,EAAA,EAAA;AACA,QAAA,SAAA;;AACA,YAAA,SAAA,EAAA;AACA,UAAA,SAAA,CAAA,EAAA,CAAA;AACA;AACA,OALA;;AAMA,UAAA,SAAA,GAAA,SAAA,SAAA,GAAA;AACA,YAAA,WAAA,EAAA;AACA,UAAA,WAAA;AACA;;AACA,YAAA,UAAA,EAAA;AACA,UAAA,UAAA;AACA;;AACA,YAAA,aAAA,EAAA;AACA,UAAA,aAAA;AACA;;AACA,QAAA,WAAA,GAAA,UAAA,GAAA,aAAA,GAAA,SAAA;AACA,OAXA;;AAYA,UAAA,SAAA,GAAA,SAAA,SAAA,GAAA;AACA,YAAA,WAAA,EAAA;AACA,UAAA,WAAA;AACA;;AACA,YAAA,SAAA,EAAA;AACA,UAAA,SAAA;AACA;;AACA,QAAA,WAAA,GAAA,SAAA,GAAA,SAAA;AACA,OARA;;AASA,UAAA,IAAA,GAAA,SAAA,IAAA,GAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,OAHA;;AAIA,UAAA,WAAA,GAAA,SAAA,WAAA,CAAA,QAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,YAAA,EAAA;AACA,YAAA,YAAA;AACA;;AACA,cAAA,YAAA,EAAA;AACA,YAAA,YAAA;AACA;;AACA,UAAA,YAAA,GAAA,YAAA,GAAA,SAAA;AACA,UAAA,IAAA;AACA,SATA,MAUA;AACA,cAAA,CAAA,YAAA,EAAA;AACA,YAAA,YAAA,GAAA,gBAAA,CAAA,EAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,OAAA,CAAA;AACA;;AACA,cAAA,CAAA,YAAA,EAAA;AACA,YAAA,YAAA,GAAA,gBAAA,CAAA,EAAA,EAAA,WAAA,EAAA,eAAA,EAAA,OAAA,CAAA;AACA;AACA;AACA,OAnBA;;AAoBA,UAAA,OAAA,GAAA,SAAA,OAAA,GAAA;AACA,QAAA,WAAA,CAAA,IAAA,CAAA;AACA,QAAA,SAAA,GAAA,WAAA,GAAA,WAAA,GAAA,SAAA;AACA,OAHA;;AAIA,aAAA;AACA,QAAA,WAAA,EAAA,WADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAAA;AAKA,KAxGA;;AAyGA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,IAAA,EAAA;AACA,aAAA,IAAA,YAAA,QAAA,GAAA,IAAA,GAAA,IAAA,CAAA,aAAA;AACA,KAFA;;AAIA,QAAA,mBAAA,GAAA,SAAA,mBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA;AACA,UAAA,OAAA,GAAA,QAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,SAAA,KAAA,GAAA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,UAAA,SAAA,GAAA,MAAA,GAAA,MAAA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,aAAA;AACA,QAAA,KADA,iBACA,CADA,EACA,CADA,EACA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,IAAA;AACS,SANT;AAOA,QAAA,MAPA,kBAOA,CAPA,EAOA,CAPA,EAOA;AACA,cAAA,CAAA,KAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,MAAA,GAAA,CAAA,GAAA,MAAA;AACA,cAAA,MAAA,GAAA,CAAA,GAAA,MAAA;AACA,cAAA,QAAA,GAAA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAA,MAAA;;AACA,cAAA,QAAA,GAAA,SAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA,cAAA,MAAA,GAAA,CAAA,MAAA,GAAA,MAAA,GAAA,MAAA,IAAA,UAAA;;AACA,cAAA,MAAA,GAAA,SAAA,EAAA;AACA,YAAA,KAAA,GAAA,CAAA;AACA,WAFA,MAGA,IAAA,MAAA,GAAA,CAAA,SAAA,EAAA;AACA,YAAA,KAAA,GAAA,CAAA,CAAA;AACA,WAFA,MAGA;AACA,YAAA,KAAA,GAAA,CAAA;AACA;;AACA,UAAA,KAAA,GAAA,KAAA;AACA,iBAAA,IAAA;AACS,SA9BT;AA+BA,QAAA,SA/BA,uBA+BA;AACA,iBAAA,KAAA,KAAA,CAAA;AACS,SAjCT;AAkCA,QAAA,YAlCA,0BAkCA;AACA,iBAAA,KAAA;AACA;AApCA,OAAA;AAsCA,KA/CA;;AAiDA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,MAAA,EAAA;AACA,UAAA,cAAA,GAAA,KAAA;AACA,UAAA,aAAA,GAAA,KAAA;AACA,UAAA,aAAA,GAAA,IAAA;AACA,UAAA,YAAA,GAAA,KAAA;AACA,UAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AAAuC,QAAA,aAAA,EAAA,KAAvC;AAAuC,QAAA,SAAA,EAAA,GAAvC;AAAuC,QAAA,eAAA,EAAA,CAAvC;AAAuC,QAAA,OAAA,EAAA,IAAvC;AAAuC,QAAA,QAAA,EAAA,EAAvC;AAAuC,QAAA,SAAA,EAAA;AAAvC,OAAA,EAA8I,MAA9I,CAAA;AACA,UAAA,QAAA,GAAA,WAAA,CAAA,QAAA;AACA,UAAA,WAAA,GAAA,WAAA,CAAA,WAAA;AACA,UAAA,OAAA,GAAA,WAAA,CAAA,OAAA;AACA,UAAA,KAAA,GAAA,WAAA,CAAA,KAAA;AACA,UAAA,WAAA,GAAA,WAAA,CAAA,WAAA;AACA,UAAA,MAAA,GAAA,WAAA,CAAA,MAAA;AACA,UAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,CAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,cAAA,EAAA,CAJA;AAKA,QAAA,QAAA,EAAA,CALA;AAMA,QAAA,QAAA,EAAA,CANA;AAOA,QAAA,SAAA,EAAA,CAPA;AAQA,QAAA,SAAA,EAAA,CARA;AASA,QAAA,MAAA,EAAA,CATA;AAUA,QAAA,MAAA,EAAA,CAVA;AAWA,QAAA,SAAA,EAAA,CAXA;AAYA,QAAA,KAAA,EAAA,SAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OAAA;AAeA,UAAA,GAAA,GAAA,mBAAA,CAAA,WAAA,CAAA,SAAA,EAAA,WAAA,CAAA,SAAA,EAAA,WAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,GAAA,kBAAA,CAAA,aAAA,CAAA;AACA,QAAA,IAAA,EAAA,MAAA,CAAA,WADA;AAEA,QAAA,QAAA,EAAA,MAAA,CAAA,eAFA;AAGA,QAAA,aAAA,EAAA,MAAA,CAAA;AAHA,OAAA,CAAA;;AAKA,UAAA,WAAA,GAAA,SAAA,WAAA,CAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,GAAA,CAAA,EAAA,CAAA;;AACA,YAAA,aAAA,IAAA,CAAA,aAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,QAAA,YAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,MAAA,CAAA,SAAA,GAAA,SAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,EAAA,CAVA,CAWA;;AACA,YAAA,QAAA,IAAA,QAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA;AACA,iBAAA,KAAA;AACA,SAdA,CAeA;;;AACA,QAAA,OAAA,CAAA,OAAA,GAhBA,CAiBA;;AACA,YAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,QAAA,aAAA,GAAA,IAAA;;AACA,YAAA,SAAA,KAAA,CAAA,EAAA;AACA,iBAAA,eAAA,EAAA;AACA;;AACA,QAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA;AACA,eAAA,IAAA;AACA,OA3BA;;AA4BA,UAAA,WAAA,GAAA,SAAA,WAAA,CAAA,EAAA,EAAA;AACA;AACA;AACA,YAAA,cAAA,EAAA;AACA,cAAA,CAAA,YAAA,IAAA,aAAA,EAAA;AACA,YAAA,YAAA,GAAA,IAAA;AACA,YAAA,eAAA,CAAA,MAAA,EAAA,EAAA,CAAA;AACA,YAAA,qBAAA,CAAA,UAAA,CAAA;AACA;;AACA;AACA,SAVA,CAWA;;;AACA,QAAA,eAAA,CAAA,MAAA,EAAA,EAAA,CAAA;;AACA,YAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,SAAA,EAAA,IAAA,CAAA,eAAA,EAAA,EAAA;AACA,YAAA,YAAA;AACA;AACA;AACA,OAlBA;;AAmBA,UAAA,UAAA,GAAA,SAAA,UAAA,GAAA;AACA;AACA;AACA,YAAA,CAAA,cAAA,EAAA;AACA;AACA;;AACA,QAAA,YAAA,GAAA,KAAA;;AACA,YAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA;AACA;AACA,OAVA;;AAWA,UAAA,eAAA,GAAA,SAAA,eAAA,GAAA;AACA,YAAA,OAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,QAAA,cAAA,GAAA,IAAA;AACA,QAAA,aAAA,GAAA,KAAA,CALA,CAMA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,MAAA,CAAA,SAAA;;AACA,YAAA,WAAA,EAAA;AACA,UAAA,WAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,WAAA;AACA,SAFA,MAGA;AACA,UAAA,WAAA;AACA;;AACA,eAAA,IAAA;AACA,OAtBA;;AAuBA,UAAA,WAAA,GAAA,SAAA,WAAA,GAAA;AACA,YAAA,OAAA,EAAA;AACA,UAAA,OAAA,CAAA,MAAA,CAAA;AACA;;AACA,QAAA,aAAA,GAAA,IAAA;AACA,OALA;;AAMA,UAAA,KAAA,GAAA,SAAA,KAAA,GAAA;AACA,QAAA,cAAA,GAAA,KAAA;AACA,QAAA,aAAA,GAAA,KAAA;AACA,QAAA,YAAA,GAAA,KAAA;AACA,QAAA,aAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,OAAA;AACA,OANA,CAzHA,CAgIA;;;AACA,UAAA,SAAA,GAAA,SAAA,SAAA,CAAA,EAAA,EAAA;AACA,YAAA,cAAA,GAAA,cAAA;AACA,YAAA,gBAAA,GAAA,aAAA;AACA,QAAA,KAAA;;AACA,YAAA,CAAA,gBAAA,EAAA;AACA;AACA;;AACA,QAAA,eAAA,CAAA,MAAA,EAAA,EAAA,CAAA,CAPA,CAQA;;AACA,YAAA,cAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA;AACA;;AACA;AACA,SAdA,CAeA;;;AACA,YAAA,WAAA,EAAA;AACA,UAAA,WAAA,CAAA,MAAA,CAAA;AACA;AACA,OAnBA;;AAoBA,UAAA,aAAA,GAAA,mBAAA,CAAA,WAAA,CAAA,EAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAA;AACA,QAAA,OAAA,EAAA;AADA,OAAA,CAAA;;AAGA,UAAA,YAAA,GAAA,SAAA,YAAA,GAAA;AACA,QAAA,KAAA;AACA,QAAA,aAAA,CAAA,IAAA;;AACA,YAAA,WAAA,EAAA;AACA,UAAA,WAAA,CAAA,MAAA,CAAA;AACA;AACA,OANA;;AAOA,aAAA;AACA,QAAA,WADA,uBACA,QADA,EACA;AACA,cAAA,QAAA,IAAA,cAAA,EAAA;AACA,YAAA,SAAA,CAAA,SAAA,CAAA;AACA;;AACA,UAAA,aAAA,CAAA,WAAA,CAAA,QAAA;AACS,SANT;AAOA,QAAA,OAPA,qBAOA;AACA,UAAA,OAAA,CAAA,OAAA;AACA,UAAA,aAAA,CAAA,OAAA;AACA;AAVA,OAAA;AAYA,KA3KA;;AA4KA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,MAAA,EAAA,EAAA,EAAA;AACA,UAAA,CAAA,EAAA,EAAA;AACA;AACA;;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,SAAA;AACA,MAAA,YAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,SAAA,GAAA,MAAA,CAAA,SAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,UAAA,SAAA,GAAA,SAAA,GAAA,KAAA;;AACA,UAAA,SAAA,GAAA,CAAA,IAAA,SAAA,GAAA,GAAA,EAAA;AACA,YAAA,SAAA,GAAA,CAAA,QAAA,GAAA,KAAA,IAAA,SAAA;AACA,YAAA,SAAA,GAAA,CAAA,QAAA,GAAA,KAAA,IAAA,SAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,SAAA,GAAA,GAAA,GAAA,MAAA,CAAA,SAAA,GAAA,GAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,SAAA,GAAA,GAAA,GAAA,MAAA,CAAA,SAAA,GAAA,GAAA;AACA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,QAAA,GAAA,MAAA,CAAA,MAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,QAAA,GAAA,MAAA,CAAA,MAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,KArBA;;AAsBA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AACA;AACA;AACA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA;;AACA,UAAA,EAAA,EAAA;AACA,YAAA,cAAA,GAAA,EAAA,CAAA,cAAA;;AACA,YAAA,cAAA,IAAA,cAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,KAAA,GAAA,cAAA,CAAA,CAAA,CAAA;AACA,UAAA,CAAA,GAAA,KAAA,CAAA,OAAA;AACA,UAAA,CAAA,GAAA,KAAA,CAAA,OAAA;AACA,SAJA,MAKA,IAAA,EAAA,CAAA,KAAA,KAAA,SAAA,EAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,KAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,KAAA;AACA;AACA;;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,CAAA;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,CAAA;AACA,KAnBA;;AAoBA,QAAA,GAAA,GAAA,SAAA,GAAA,CAAA,EAAA,EAAA;AACA,aAAA,EAAA,CAAA,SAAA,IAAA,IAAA,CAAA,GAAA,EAAA;AACA,KAFA","sourcesContent":["class GestureController {\n    constructor() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    createGesture(config) {\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    createBlocker(opts = {}) {\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n    start(gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    }\n    capture(gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        const requestedStart = this.requestedStart;\n        let maxPriority = -10000;\n        requestedStart.forEach(value => {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    }\n    release(id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    }\n    disableGesture(gestureName, id) {\n        let set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    }\n    enableGesture(gestureName, id) {\n        const set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    }\n    disableScroll(id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    }\n    enableScroll(id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    }\n    canStart(gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    }\n    isCaptured() {\n        return this.capturedId !== undefined;\n    }\n    isScrollDisabled() {\n        return this.disabledScroll.size > 0;\n    }\n    isDisabled(gestureName) {\n        const disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    }\n    newID() {\n        this.gestureId++;\n        return this.gestureId;\n    }\n}\nclass GestureDelegate {\n    constructor(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    canStart() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    }\n    start() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    }\n    capture() {\n        if (!this.ctrl) {\n            return false;\n        }\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    }\n    release() {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    }\n    destroy() {\n        this.release();\n        this.ctrl = undefined;\n    }\n}\nclass BlockerDelegate {\n    constructor(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    block() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    }\n    unblock() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    }\n    destroy() {\n        this.unblock();\n        this.ctrl = undefined;\n    }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nconst addEventListener = (el, eventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el) ? {\n        'capture': !!opts.capture,\n        'passive': !!opts.passive,\n    } : !!opts.capture;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                }\n            });\n            node.addEventListener('optsTest', () => { return; }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const setDisabled = (disabled) => {\n        if (disabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        setDisabled(true);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        setDisabled,\n        stop,\n        destroy\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = (x - startX);\n            const deltaY = (y - startY);\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        }\n    };\n};\n\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTimeStamp: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        timeStamp: 0,\n        event: undefined,\n        data: undefined\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (gesture && !gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const fireOnStart = () => {\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        setDisabled(disabled) {\n            if (disabled && hasCapturedPan) {\n                pointerUp(undefined);\n            }\n            pointerEvents.setDisabled(disabled);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        }\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.timeStamp;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = detail.timeStamp = now(ev);\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { GESTURE_CONTROLLER, createGesture };\n"],"sourceRoot":"webpack:///","file":"2-es5.js"}