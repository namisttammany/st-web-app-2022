{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-action-sheet-controller_8.entry.js","node_modules/@ionic/core/dist/esm/overlays-10640d86.js","node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as getIonMode, h, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-10640d86.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst ActionSheetController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an action sheet overlay with action sheet options.\n     *\n     * @param options The options to use to create the action sheet.\n     */\n    create(options) {\n        return createOverlay('ion-action-sheet', options);\n    }\n    /**\n     * Dismiss the open action sheet overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n    }\n    /**\n     * Get the most recently opened action sheet overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-action-sheet');\n    }\n};\n\nconst AlertController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an alert overlay with alert options.\n     *\n     * @param options The options to use to create the alert.\n     */\n    create(options) {\n        return createOverlay('ion-alert', options);\n    }\n    /**\n     * Dismiss the open alert overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-alert', id);\n    }\n    /**\n     * Get the most recently opened alert overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-alert');\n    }\n};\n\nconst Anchor = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nconst LoadingController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a loading overlay with loading options.\n     *\n     * @param options The options to use to create the loading.\n     */\n    create(options) {\n        return createOverlay('ion-loading', options);\n    }\n    /**\n     * Dismiss the open loading overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the loading.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the loading.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-loading', id);\n    }\n    /**\n     * Get the most recently opened loading overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-loading');\n    }\n};\n\nconst ModalController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a modal overlay with modal options.\n     *\n     * @param options The options to use to create the modal.\n     */\n    create(options) {\n        return createOverlay('ion-modal', options);\n    }\n    /**\n     * Dismiss the open modal overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the modal.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-modal', id);\n    }\n    /**\n     * Get the most recently opened modal overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-modal');\n    }\n};\n\nconst PickerController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a picker overlay with picker options.\n     *\n     * @param options The options to use to create the picker.\n     */\n    create(options) {\n        return createOverlay('ion-picker', options);\n    }\n    /**\n     * Dismiss the open picker overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-picker', id);\n    }\n    /**\n     * Get the most recently opened picker overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-picker');\n    }\n};\n\nconst PopoverController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a popover overlay with popover options.\n     *\n     * @param options The options to use to create the popover.\n     */\n    create(options) {\n        return createOverlay('ion-popover', options);\n    }\n    /**\n     * Dismiss the open popover overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the popover.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-popover', id);\n    }\n    /**\n     * Get the most recently opened popover overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-popover');\n    }\n};\n\nconst ToastController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a toast overlay with toast options.\n     *\n     * @param options The options to use to create the toast.\n     */\n    create(options) {\n        return createOverlay('ion-toast', options);\n    }\n    /**\n     * Dismiss the open toast overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-toast', id);\n    }\n    /**\n     * Get the most recently opened toast overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-toast');\n    }\n};\n\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\n","import { b as config } from './config-3c7f3790.js';\n\nlet lastId = 0;\nconst createController = (tagName) => {\n    return {\n        create(options) {\n            return createOverlay(tagName, options);\n        },\n        dismiss(data, role, id) {\n            return dismissOverlay(document, data, role, tagName, id);\n        },\n        async getTop() {\n            return getOverlay(document, tagName);\n        }\n    };\n};\nconst alertController = /*@__PURE__*/ createController('ion-alert');\nconst actionSheetController = /*@__PURE__*/ createController('ion-action-sheet');\nconst loadingController = /*@__PURE__*/ createController('ion-loading');\nconst modalController = /*@__PURE__*/ createController('ion-modal');\nconst pickerController = /*@__PURE__*/ createController('ion-picker');\nconst popoverController = /*@__PURE__*/ createController('ion-popover');\nconst toastController = /*@__PURE__*/ createController('ion-toast');\nconst prepareOverlay = (el) => {\n    const doc = document;\n    connectListeners(doc);\n    const overlayIndex = lastId++;\n    el.overlayIndex = overlayIndex;\n    if (!el.hasAttribute('id')) {\n        el.id = `ion-overlay-${overlayIndex}`;\n    }\n};\nconst createOverlay = (tagName, opts) => {\n    return customElements.whenDefined(tagName).then(() => {\n        const doc = document;\n        const element = doc.createElement(tagName);\n        element.classList.add('overlay-hidden');\n        // convert the passed in overlay options into props\n        // that get passed down into the new overlay\n        Object.assign(element, opts);\n        // append the overlay element to the document body\n        getAppRoot(doc).appendChild(element);\n        return element.componentOnReady();\n    });\n};\nconst connectListeners = (doc) => {\n    if (lastId === 0) {\n        lastId = 1;\n        // trap focus inside overlays\n        doc.addEventListener('focusin', ev => {\n            const lastOverlay = getOverlay(doc);\n            if (lastOverlay && lastOverlay.backdropDismiss && !isDescendant(lastOverlay, ev.target)) {\n                const firstInput = lastOverlay.querySelector('input,button');\n                if (firstInput) {\n                    firstInput.focus();\n                }\n            }\n        });\n        // handle back-button click\n        doc.addEventListener('ionBackButton', ev => {\n            const lastOverlay = getOverlay(doc);\n            if (lastOverlay && lastOverlay.backdropDismiss) {\n                ev.detail.register(100, () => {\n                    return lastOverlay.dismiss(undefined, BACKDROP);\n                });\n            }\n        });\n        // handle ESC to close overlay\n        doc.addEventListener('keyup', ev => {\n            if (ev.key === 'Escape') {\n                const lastOverlay = getOverlay(doc);\n                if (lastOverlay && lastOverlay.backdropDismiss) {\n                    lastOverlay.dismiss(undefined, BACKDROP);\n                }\n            }\n        });\n    }\n};\nconst dismissOverlay = (doc, data, role, overlayTag, id) => {\n    const overlay = getOverlay(doc, overlayTag, id);\n    if (!overlay) {\n        return Promise.reject('overlay does not exist');\n    }\n    return overlay.dismiss(data, role);\n};\nconst getOverlays = (doc, selector) => {\n    if (selector === undefined) {\n        selector = 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker,ion-popover,ion-toast';\n    }\n    return Array.from(doc.querySelectorAll(selector))\n        .filter(c => c.overlayIndex > 0);\n};\nconst getOverlay = (doc, overlayTag, id) => {\n    const overlays = getOverlays(doc, overlayTag);\n    return (id === undefined)\n        ? overlays[overlays.length - 1]\n        : overlays.find(o => o.id === id);\n};\nconst present = async (overlay, name, iosEnterAnimation, mdEnterAnimation, opts) => {\n    if (overlay.presented) {\n        return;\n    }\n    overlay.presented = true;\n    overlay.willPresent.emit();\n    // get the user's animation fn if one was provided\n    const animationBuilder = (overlay.enterAnimation)\n        ? overlay.enterAnimation\n        : config.get(name, overlay.mode === 'ios' ? iosEnterAnimation : mdEnterAnimation);\n    const completed = await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n    if (completed) {\n        overlay.didPresent.emit();\n    }\n};\nconst dismiss = async (overlay, data, role, name, iosLeaveAnimation, mdLeaveAnimation, opts) => {\n    if (!overlay.presented) {\n        return false;\n    }\n    overlay.presented = false;\n    try {\n        overlay.willDismiss.emit({ data, role });\n        const animationBuilder = (overlay.leaveAnimation)\n            ? overlay.leaveAnimation\n            : config.get(name, overlay.mode === 'ios' ? iosLeaveAnimation : mdLeaveAnimation);\n        await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n        overlay.didDismiss.emit({ data, role });\n    }\n    catch (err) {\n        console.error(err);\n    }\n    overlay.el.remove();\n    return true;\n};\nconst getAppRoot = (doc) => {\n    return doc.querySelector('ion-app') || doc.body;\n};\nconst overlayAnimation = async (overlay, animationBuilder, baseEl, opts) => {\n    if (overlay.animation) {\n        overlay.animation.destroy();\n        overlay.animation = undefined;\n        return false;\n    }\n    // Make overlay visible in case it's hidden\n    baseEl.classList.remove('overlay-hidden');\n    const aniRoot = baseEl.shadowRoot || overlay.el;\n    /**\n     * TODO: Remove AnimationBuilder\n     */\n    let animation;\n    let isAnimationBuilder = true;\n    try {\n        const mod = await import('./index-69c37885.js');\n        animation = await mod.create(animationBuilder, aniRoot, opts);\n    }\n    catch (err) {\n        animation = animationBuilder(aniRoot, opts);\n        animation.fill('both');\n        isAnimationBuilder = false;\n    }\n    overlay.animation = animation;\n    if (!overlay.animated || !config.getBoolean('animated', true)) {\n        animation.duration(0);\n    }\n    if (overlay.keyboardClose) {\n        animation.beforeAddWrite(() => {\n            const activeElement = baseEl.ownerDocument.activeElement;\n            if (activeElement && activeElement.matches('input, ion-input, ion-textarea')) {\n                activeElement.blur();\n            }\n        });\n    }\n    const animationResult = await animation.playAsync();\n    /**\n     * TODO: Remove AnimationBuilder\n     */\n    const hasCompleted = (typeof animationResult === 'undefined') ? true : animation.hasCompleted;\n    if (isAnimationBuilder) {\n        animation.destroy();\n    }\n    overlay.animation = undefined;\n    return hasCompleted;\n};\nconst eventMethod = (element, eventName) => {\n    let resolve;\n    const promise = new Promise(r => resolve = r);\n    onceEvent(element, eventName, (event) => {\n        resolve(event.detail);\n    });\n    return promise;\n};\nconst onceEvent = (element, eventName, callback) => {\n    const handler = (ev) => {\n        element.removeEventListener(eventName, handler);\n        callback(ev);\n    };\n    element.addEventListener(eventName, handler);\n};\nconst isCancel = (role) => {\n    return role === 'cancel' || role === BACKDROP;\n};\nconst isDescendant = (parent, child) => {\n    while (child) {\n        if (child === parent) {\n            return true;\n        }\n        child = child.parentElement;\n    }\n    return false;\n};\nconst defaultGate = (h) => h();\nconst safeCall = (handler, arg) => {\n    if (typeof handler === 'function') {\n        const jmp = config.get('_zoneGate', defaultGate);\n        return jmp(() => {\n            try {\n                return handler(arg);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n    }\n    return undefined;\n};\nconst BACKDROP = 'backdrop';\n\nexport { BACKDROP as B, alertController as a, actionSheetController as b, popoverController as c, prepareOverlay as d, present as e, dismiss as f, eventMethod as g, createOverlay as h, isCancel as i, dismissOverlay as j, getOverlay as k, loadingController as l, modalController as m, pickerController as p, safeCall as s, toastController as t };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":"webpack:///","file":"5-es5.js"}