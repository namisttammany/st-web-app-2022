{"version":3,"sources":["node_modules/@ionic-native/google-plus/index.js","src/app/services/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Google Plus\n * @description\n * @usage\n * ```typescript\n * import { GooglePlus } from '@ionic-native/google-plus';\n *\n * constructor(private googlePlus: GooglePlus) { }\n *\n * ...\n *\n * this.googlePlus.login({})\n *   .then(res => console.log(res))\n *   .catch(err => console.error(err));\n *\n * ```\n */\nvar GooglePlus = (function (_super) {\n    __extends(GooglePlus, _super);\n    function GooglePlus() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * The login function walks the user through the Google Auth process.\n     * @param options\n     * @returns {Promise<any>}\n     */\n    /**\n       * The login function walks the user through the Google Auth process.\n       * @param options\n       * @returns {Promise<any>}\n       */\n    GooglePlus.prototype.login = /**\n       * The login function walks the user through the Google Auth process.\n       * @param options\n       * @returns {Promise<any>}\n       */\n    function (options) { return; };\n    /**\n     * You can call trySilentLogin to check if they're already signed in to the app and sign them in silently if they are.\n     * @param options\n     * @returns {Promise<any>}\n     */\n    /**\n       * You can call trySilentLogin to check if they're already signed in to the app and sign them in silently if they are.\n       * @param options\n       * @returns {Promise<any>}\n       */\n    GooglePlus.prototype.trySilentLogin = /**\n       * You can call trySilentLogin to check if they're already signed in to the app and sign them in silently if they are.\n       * @param options\n       * @returns {Promise<any>}\n       */\n    function (options) { return; };\n    /**\n     * This will clear the OAuth2 token.\n     * @returns {Promise<any>}\n     */\n    /**\n       * This will clear the OAuth2 token.\n       * @returns {Promise<any>}\n       */\n    GooglePlus.prototype.logout = /**\n       * This will clear the OAuth2 token.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    /**\n     * This will clear the OAuth2 token, forget which account was used to login, and disconnect that account from the app. This will require the user to allow the app access again next time they sign in. Be aware that this effect is not always instantaneous. It can take time to completely disconnect.\n     * @returns {Promise<any>}\n     */\n    /**\n       * This will clear the OAuth2 token, forget which account was used to login, and disconnect that account from the app. This will require the user to allow the app access again next time they sign in. Be aware that this effect is not always instantaneous. It can take time to completely disconnect.\n       * @returns {Promise<any>}\n       */\n    GooglePlus.prototype.disconnect = /**\n       * This will clear the OAuth2 token, forget which account was used to login, and disconnect that account from the app. This will require the user to allow the app access again next time they sign in. Be aware that this effect is not always instantaneous. It can take time to completely disconnect.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    /**\n     * This will retrieve the Android signing certificate fingerprint which is required in the Google Developer Console.\n     * @returns {Promise<any>}\n     */\n    /**\n       * This will retrieve the Android signing certificate fingerprint which is required in the Google Developer Console.\n       * @returns {Promise<any>}\n       */\n    GooglePlus.prototype.getSigningCertificateFingerprint = /**\n       * This will retrieve the Android signing certificate fingerprint which is required in the Google Developer Console.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    GooglePlus.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 1,\n            errorIndex: 2\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GooglePlus.prototype, \"login\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GooglePlus.prototype, \"trySilentLogin\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GooglePlus.prototype, \"logout\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GooglePlus.prototype, \"disconnect\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GooglePlus.prototype, \"getSigningCertificateFingerprint\", null);\n    /**\n     * @name Google Plus\n     * @description\n     * @usage\n     * ```typescript\n     * import { GooglePlus } from '@ionic-native/google-plus';\n     *\n     * constructor(private googlePlus: GooglePlus) { }\n     *\n     * ...\n     *\n     * this.googlePlus.login({})\n     *   .then(res => console.log(res))\n     *   .catch(err => console.error(err));\n     *\n     * ```\n     */\n    GooglePlus = __decorate([\n        Plugin({\n            pluginName: 'GooglePlus',\n            plugin: 'cordova-plugin-googleplus',\n            pluginRef: 'window.plugins.googleplus',\n            repo: 'https://github.com/EddyVerbruggen/cordova-plugin-googleplus',\n            install: 'ionic cordova plugin add cordova-plugin-googleplus --variable REVERSED_CLIENT_ID=myreversedclientid',\n            installVariables: ['REVERSED_CLIENT_ID'],\n            platforms: ['Android', 'iOS']\n        })\n    ], GooglePlus);\n    return GooglePlus;\n}(IonicNativePlugin));\nexport { GooglePlus };\n//# sourceMappingURL=index.js.map","import { Injectable } from \"@angular/core\";\nimport * as firebase from 'firebase/app';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Platform } from '@ionic/angular';\nimport { GooglePlus } from '@ionic-native/google-plus';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  private user: firebase.User;\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    public platform: Platform,\n    public googlePlus: GooglePlus,\n\t){\n    afAuth.authState.subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  get authenticated(): boolean {\n    return this.user !== null;\n  }\n\n  doRegister(value){\n   return new Promise<any>((resolve, reject) => {\n     firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\n     .then(\n       res => resolve(res),\n       err => reject(err))\n   })\n  }\n\n  doLogin(value){\n   return new Promise<any>((resolve, reject) => {\n     firebase.auth().signInWithEmailAndPassword(value.email, value.password)\n     .then(\n       res => resolve(res),\n       err => reject(err))\n   })\n  }\n\n  doGoogleLogin(){\n      return new Promise<any>((resolve, reject) => {\n         if (this.platform.is('cordova')) {\n           this.googlePlus.login({\n             'scopes': '', // optional, space-separated list of scopes, If not included or empty, defaults to `profile` and `email`.\n             'webClientId': environment.googleWebClientId, // optional clientId of your Web application from Credentials settings of your project - On Android, this MUST be included to get an idToken. On iOS, it is not required.\n             'offline': true\n           }).then((response) => {\n             const googleCredential = firebase.auth.GoogleAuthProvider.credential(response.idToken);\n             firebase.auth().signInWithCredential(googleCredential)\n             .then((user) => {\n               resolve();\n             });\n           },(err) => {\n             reject(err);\n           });\n         }\n         else{\n           firebase.auth()\n           .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n           .then((user) => {\n              resolve()\n           },(err) => {\n            reject(err);\n          })\n         }\n       })\n       }\n\n  doLogout():Promise<void> {\n    return new Promise<any>((resolve, reject) => {\n      if(firebase.auth().currentUser){\n        firebase.auth().signOut()\n        .then(() => {\n        //  this.firebaseService.unsubscribeOnLogOut();\n          resolve();\n        }).catch((error) => {\n          reject();\n        });\n      }\n    })\n  }\n\n  resetPassword(email:string): Promise<void> {\n    return firebase.auth().sendPasswordResetEmail(email);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~register-register-module~resetpassword-resetpassword-module-es5.js"}